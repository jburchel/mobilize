name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        python -m pytest tests/ -v --cov=app --cov-report=xml
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Build and push Docker image
      run: |
        gcloud auth configure-docker
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/mobilize-app:${{ github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/mobilize-app:${{ github.sha }}
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy mobilize-app \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/mobilize-app:${{ github.sha }} \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 1 \
          --max-instances 10 \
          --set-env-vars FLASK_ENV=production \
          --set-cloudsql-instances ${{ secrets.GCP_PROJECT_ID }}:us-central1:mobilize-db
          
    - name: Create latest tag
      run: |
        docker tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/mobilize-app:${{ github.sha }} gcr.io/${{ secrets.GCP_PROJECT_ID }}/mobilize-app:latest
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/mobilize-app:latest 