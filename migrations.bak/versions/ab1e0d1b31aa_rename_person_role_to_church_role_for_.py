"""Rename person role to church_role for clarity

Revision ID: ab1e0d1b31aa
Revises: 811e9744caca
Create Date: 2025-03-21 15:56:25.237879

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite
from sqlalchemy.orm import Session
from sqlalchemy import table, column

# revision identifiers, used by Alembic.
revision = 'ab1e0d1b31aa'
down_revision = '811e9744caca'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        # Using batch operations for SQLite compatibility
        with op.batch_alter_table('people') as batch_op:
            # Step 1: Add the new column
            batch_op.add_column(sa.Column('church_role', sa.String(length=100), nullable=True))
            
        # Step 2: Copy data from the old column to the new column
        # Define a helper table for the update
        people = table('people',
            column('role', sa.String(100)),
            column('church_role', sa.String(100))
        )
        
        # Execute SQL to copy data
        op.execute(
            people.update().values(church_role=people.c.role)
        )
        
        # Step 3: Drop the old column
        with op.batch_alter_table('people') as batch_op:
            batch_op.drop_column('role')
            
        print("Successfully renamed 'role' to 'church_role' in people table")
    except Exception as e:
        print(f"Error renaming column in people table: {e}")
    
    # Skip other changes that could cause issues
    # op.alter_column('sync_history', 'status',
    #            existing_type=sa.VARCHAR(length=20),
    #            nullable=True)
    # op.drop_column('sync_history', 'next_sync_token')
    # op.drop_column('sync_history', 'action')
    # op.drop_column('sync_history', 'started_at')
    # op.drop_column('sync_history', 'details')
    # op.drop_column('sync_history', 'updated_at')
    # op.create_foreign_key(None, 'tasks', 'users', ['created_by'], ['id'])
    # op.alter_column('users', 'office_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        # Using batch operations for SQLite compatibility
        with op.batch_alter_table('people') as batch_op:
            # Step 1: Add the old column back
            batch_op.add_column(sa.Column('role', sa.VARCHAR(length=100), nullable=True))
            
        # Step 2: Copy data back from the new column to the old column
        # Define a helper table for the update
        people = table('people',
            column('role', sa.String(100)),
            column('church_role', sa.String(100))
        )
        
        # Execute SQL to copy data back
        op.execute(
            people.update().values(role=people.c.church_role)
        )
        
        # Step 3: Drop the new column
        with op.batch_alter_table('people') as batch_op:
            batch_op.drop_column('church_role')
            
        print("Successfully reverted 'church_role' back to 'role' in people table")
    except Exception as e:
        print(f"Error reverting column rename in people table: {e}")
        
    # Skip other changes
    # op.alter_column('users', 'office_id',
    #            existing_type=sa.INTEGER(),
    #            nullable=False)
    # op.drop_constraint(None, 'tasks', type_='foreignkey')
    # op.add_column('sync_history', sa.Column('updated_at', sa.DATETIME(), nullable=True))
    # op.add_column('sync_history', sa.Column('details', sqlite.JSON(), nullable=True))
    # op.add_column('sync_history', sa.Column('started_at', sa.DATETIME(), nullable=False))
    # op.add_column('sync_history', sa.Column('action', sa.VARCHAR(length=50), nullable=False))
    # op.add_column('sync_history', sa.Column('next_sync_token', sa.VARCHAR(length=255), nullable=True))
    # op.alter_column('sync_history', 'status',
    #            existing_type=sa.VARCHAR(length=20),
    #            nullable=False)
    # ### end Alembic commands ###
